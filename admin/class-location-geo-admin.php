<?phpclass LOCATION_GEO_Admin {	/**	 * The ID of this plugin.	 *	 * @since    1.0.0	 * @access   private	 * @var      string    $plugin_name    The ID of this plugin.	 */	private $plugin_name;	/**	 * The version of this plugin.	 *	 * @since    1.0.0	 * @access   private	 * @var      string    $version    The current version of this plugin.	 */	private $version;	/**	 * Initialize the class and set its properties.	 *	 * @since    1.0.0	 * @param      string    $plugin_name       The name of this plugin.	 * @param      string    $version    The version of this plugin.	 */	public function __construct( $plugin_name, $version ) {        $settingsOptions = get_option( 'max_sb_location_geo_settings' );		$this->plugin_name = $plugin_name;		$this->version = $version;        $this->apiKey = (!empty($settingsOptions['max_sb_location_geo_gmap_api'])) ? $settingsOptions['max_sb_location_geo_gmap_api'] : '';	}	/**	 * Register the stylesheets for the admin area.	 *	 * @since    1.0.0	 */	public function enqueue_styles() {        wp_enqueue_style( 'bootstrap', plugin_dir_url( __FILE__ ) . 'css/admin.css', array(), $this->version, 'all' );	}	/**	 * Register the JavaScript for the admin area.	 *	 * @since    1.0.0	 */	public function enqueue_scripts() {        wp_enqueue_style( 'wp-color-picker' );		wp_enqueue_script( $this->plugin_name,   plugin_dir_url( __FILE__ ) . 'js/admin.js', array( 'jquery', 'wp-color-picker' ), $this->version, true );        wp_enqueue_script( $this->plugin_name . '-gmap', 'https://maps.googleapis.com/maps/api/js?key='.$this->apiKey.'&libraries=places', array(), false, false );	}    public function max_plugin_license_verify(){        $verify  = 'https://plugins.maxenius.com/';//        $verify = $app_url  = 'http://localhost/usama/pdf';        $app_url = $_POST['appurl'];        $plugin_name = $this->plugin_name;        $app_key = $_POST['key'];        $pieces = parse_url($app_url);        $domain = isset($pieces['host']) ? $pieces['host'] : '';        if(preg_match('/(?P<domain>[a-z0-9][a-z0-9\-]{1,63}\.[a-z\.]{2,6})$/i', $domain, $regs)){            $app_url = $regs['domain'];        }//        $delivery_url = $verify.'/wp-json/max_verify_licenses/v1/license_verify/?site_name='.$domain.'&license_key='.$app_key.'&plugin_name='.$plugin_name;        $delivery_url = $verify.'/wp-json/max_verify_licenses/v1/license_verify/?site_name='.$app_url.'&license_key='.$app_key.'&plugin_name='.$plugin_name;        $response = wp_remote_post( $delivery_url, array(                'method'      => 'GET',                'timeout'     => 45,                'redirection' => 5,                'httpversion' => '1.0',                'blocking'    => true,                'headers'     => array('Content-type' => 'application/json',                    'Accept' => 'application/json' ),                'cookies' => array()            )        );        $response = $response['body'];        update_option('licenses_res', $response);        update_option('max_sb_location_geo_license_key', $app_key);//        echo get_option('max_sb_location_geo_license_key');        echo $response;	    die();    }    public function getDomain($url){        $pieces = parse_url($url);        $domain = isset($pieces['host']) ? $pieces['host'] : '';        if(preg_match('/(?P<domain>[a-z0-9][a-z0-9\-]{1,63}\.[a-z\.]{2,6})$/i', $domain, $regs)){            return $regs['domain'];        }        return FALSE;    }}